version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    # Enables the web UI and tells Traefik to listen to docker
    command:
        - --api.insecure=true
        - --providers.docker
        - --accesslog
        #- --log.level=DEBUG
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.middlewares.localhost-go.redirectregex.regex=^http://localhost/go/(.*)"
      - "traefik.http.middlewares.localhost-go.redirectregex.replacement=http://go/$${1}"
  # testing services
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
      #- "traefik.http.routers.ngrokio.rule=HostRegexp(`{subdomain:.+}.ngrok.io`)"
  # golinks for local go/xxx
  golinks:
    build: ./golinks
    volumes:
      - ./data/golinks:/var/data
    labels:
      - "traefik.http.routers.golinks.rule=Host(`go`)"
      - "traefik.http.routers.ngrokio-golinks.rule=HostRegexp(`{subdomain:.+}.ngrok.io`) && (Query(`to=golinks`) || Query(`to=go`))"
      - "traefik.http.services.golinks-local-services.loadbalancer.server.port=8067"
